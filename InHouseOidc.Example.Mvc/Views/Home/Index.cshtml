@using InHouseOidc.Example.Mvc
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model InHouseOidc.Example.Common.ExampleViewModel
@{
    ViewData["Title"] = "Home";
}
<div class="container960">
    <div class="card">
        <div class="card-header d-flex align-items-center justify-content-between">
            <a class="nav-link" asp-controller="Home" asp-action="Index"><h3>InHouseOidc.Example.Mvc</h3></a>
            @using(Html.BeginForm("Logout", "Home", FormMethod.Post, new { id = "LogoutForm"}))
            {
                <input class="btn btn-primary" type="submit" value="Logout" id="logout" />
            }
        </div>
        <div class="card-body">
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Role</th>
                        <th>Session Expiry</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.Name</td>
                        <td>@Model.Role</td>
                        <td>@Model.SessionExpiry</td>
                    </tr>
                </tbody>
            </table>
            <div>
                <div class="d-flex mt-2 align-items-center">
                    @using(Html.BeginForm("CallApi", "Home", FormMethod.Post, new { id = "CallApiForm"}))
                    {
                        <input class="btn btn-primary mr-2" type="submit" value="Call API" id="callApi" />
                    }
                    <span class="">@Model.ApiResult</span>
                </div>
                <div>
                    <div class="d-flex mt-2 align-items-center">
                        @using(Html.BeginForm("CallProviderApi", "Home", FormMethod.Post, new { id = "CallProviderApiForm"}))
                        {
                            <input class="btn btn-primary mr-2" type="submit" value="Call Provider API" id="callProviderApi" />
                        }
                        <span class="">@Model.ApiResultProvider</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header">
            <h4 class="m-0">Claims</h4>
        </div>
        <div class="card-body">
            <table>
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var claim in (Model.Claims ?? new List<System.Security.Claims.Claim>()))
                    {
                        <tr>
                            <td>@claim.Type</td>
                            <td>@claim.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header d-flex align-items-center">
            <h4 class="m-0">Access Token</h4>
            <small class="ml-auto">Expiry @Model.AccessTokenExpiry</small>
            <div class="btn-group-sm btn-group-toggle ml-2">
                <button id="buttonAccessTokenEncoded" type="button" class="btn btn-secondary active" onclick="displayAccessTokenEncoded()">Encoded</button>
                <button id="buttonAccessTokenDecoded" type="button" class="btn btn-secondary" onclick="displayAccessTokenDecoded()">Decoded</button>
            </div>
        </div>
        <div class="card-body">
            <span id="accessTokenEncoded">@Model.AccessToken</span>
            <pre id="accessTokenDecoded" class="m-0 d-none">@Model.AccessTokenJson</pre>
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header d-flex align-items-center">
            <h4 class="m-0">Id Token</h4>
            <small class="ml-auto">Expiry @Model.IdTokenExpiry</small>
            <div class="btn-group-sm btn-group-toggle ml-2">
                <button id="buttonIdTokenEncoded" type="button" class="btn btn-secondary active" onclick="displayIdTokenEncoded()">Encoded</button>
                <button id="buttonIdTokenDecoded" type="button" class="btn btn-secondary" onclick="displayIdTokenDecoded()">Decoded</button>
            </div>
        </div>
        <div class="card-body mb-0">
            <span id="idTokenEncoded">@Model.IdToken</span>
            <pre id="idTokenDecoded" class="m-0 d-none">@Model.IdTokenJson</pre>
        </div>
    </div>
    <div class="card mt-2">
        <div class="card-header">
            <h4 class="m-0">Refresh Token</h4>
        </div>
        <div class="card-body">
            @Model.RefreshToken
        </div>
    </div>
</div>
